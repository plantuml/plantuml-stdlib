' Begin duplicate inclusion protection header.
!if %true() != $CLASSY_C4_PROVIDER_SYSTEM_PUML
!$CLASSY_C4_PROVIDER_SYSTEM_PUML = %true()
' End duplicate inclusion protection header.

!include <classy/types/map>
!include <classy/types/ported-interface-provider>
!include <classy-c4/system>

$class(ProviderSystem)
  $classImplements(System)
  $classImplements(PortedInterfaceProvider, 'provider')
  $classVar(containerRendererCallback, Callback)
  $classVar(portContainerInterfaceMap, Map)

  !function ProviderSystem($this)
    !$parent = $getInstanceVar($this, 'parent')
    System($parent)

    !$provider = $getInstanceVar($this, 'provider')
    PortedInterfaceProvider($provider)

    $setInstanceVar($this, 'portContainerInterfaceMap', $new('Map'))

    !$cbElementContent = $new('Callback')
    !$cbPreElement = $new('Callback')

    $call($cbElementContent, 'setContext', $this)
    $call($cbPreElement, 'setContext', $this)

    $call($cbElementContent, 'setMethod', 'ProviderSystem__renderPorts')
    $call($cbPreElement, 'setMethod', 'ProviderSystem__renderInterfaces')

    $call($this, 'setElementContentRendererCallback', $cbElementContent)
    $call($this, 'setPreElementRendererCallback', $cbPreElement)

    !return $this
  !endfunction

  !procedure ProviderSystem__renderContainers($this, $alias)
    !$callback = $call($this, 'getContainerRendererCallback')

    !if '' != $callback
      !$context = $call($callback, 'getContext')
      !$method = $call($callback, 'getMethod')

      together {
        $preInvoke($method, $context, array($new('array'), $alias))
        %invoke_procedure($method, $context, $alias)
        $postInvoke()
      }

      !$ports = $call($this, 'getPorts')
      !$port = $call($ports, 'each')
      !$map = $getInstanceVar($this, 'portContainerInterfaceMap')

      !while %false() != $port
        !$present = $call($map, 'has', $port)

        !if $present
          !$interfaces = $call($map, 'get', $port)
          !$interface = $call($interfaces, 'each')
          !$portAlias = $call($port, 'render')

          !while %false() != $interface
            !$current = $call($interface, 'render')
            $current -- $portAlias
            !$interface = $call($interfaces, 'each')
          !endwhile
        !endif

        !$port = $call($ports, 'each')
      !endwhile
    !endif
  !endprocedure

  !procedure ProviderSystem__renderInterfaces($this, $alias)
    !$interfaces = $call($this, 'getInterfaces')

    !if '' != $interfaces
      !$interface = $call($interfaces, 'each')

      !while %false() != $interface
        $call($interface, 'render', $void=%true())
        !$interface = $call($interfaces, 'each')
      !endwhile
    !endif
  !endprocedure

  !procedure ProviderSystem__renderPorts($this, $alias)
    !$ports = $call($this, 'getPorts')
    !$port = $call($ports, 'each')

    !while %false() != $port
      $call($port, 'render', $void=%true())
      !$port = $call($ports, 'each')
    !endwhile

    !if $call($this, 'isFocus')
      ProviderSystem__renderContainers($this, $alias)
    !endif

    !$interfaces = $call($this, 'getInterfaces')

    !if '' != $interfaces
      !$interface = $call($interfaces, 'each')
      !$map = $call($this, 'getMap')

      !while %false() != $interface
        !$port = $call($map, 'get', $interface)
        !$portAlias = $call($port, 'render')
        !$interfaceAlias = $call($interface, 'render')
        $interfaceAlias -- $portAlias
        !$interface = $call($interfaces, 'each')
      !endwhile
    !endif
  !endprocedure

  $classMethod(exposeContainerInterface)
    !function ProviderSystem__exposeContainerInterface($this, $args)
      !$interface = $call($args, 'each')

      !if 1 == $call($args, 'size')
        !$port = $call($this, 'getPort')
      !else
        !$port = $call($args, 'each')
      !endif

      !$map = $getInstanceVar($this, 'portContainerInterfaceMap')

      !if %not($call($map, 'has', $port))
        $call($map, 'add', array($new('array'), $port, $new('array')))
      !endif

      !$interfaces = $call($map, 'get', $port)

      !if %not($call($interfaces, 'contains', $interface))
        $call($interfaces, 'push', $interface)
      !endif

      !return $this
    !endfunction
  $endclassMethod(exposeContainerInterface)

  $classMethod(getContainerRendererCallback)
    !function ProviderSystem__getContainerRendererCallback($this)
      !return $getInstanceVar($this, 'containerRendererCallback')
    !endfunction
  $endclassMethod(getContainerRendererCallback)

  $classMethod(setContainerRendererCallback)
    !function ProviderSystem__setContainerRendererCallback($this, $args)
      $setInstanceVar($this, 'containerRendererCallback', $call($args, 'pop'))
      !return $this
    !endfunction
  $endclassMethod(setContainerRendererCallback)
$endclass(ProviderSystem)

' Terminate duplicate inclusion enclosure.
!endif
